// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto
// Protobuf C++ Version: 5.26.0

#include "message.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cybertx {
namespace messages {

inline constexpr PPMUpdateAll::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        channel_values_{},
        _channel_values_cached_byte_size_{0},
        line_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PPMUpdateAll::PPMUpdateAll(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PPMUpdateAllDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PPMUpdateAllDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PPMUpdateAllDefaultTypeInternal() {}
  union {
    PPMUpdateAll _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PPMUpdateAllDefaultTypeInternal _PPMUpdateAll_default_instance_;

inline constexpr PPMUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        line_{0},
        channel_{0},
        channel_value_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PPMUpdate::PPMUpdate(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PPMUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PPMUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PPMUpdateDefaultTypeInternal() {}
  union {
    PPMUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PPMUpdateDefaultTypeInternal _PPMUpdate_default_instance_;
}  // namespace messages
}  // namespace cybertx
static ::_pb::Metadata file_level_metadata_message_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_message_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_message_2eproto = nullptr;
const ::uint32_t
    TableStruct_message_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::cybertx::messages::PPMUpdate, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cybertx::messages::PPMUpdate, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cybertx::messages::PPMUpdate, _impl_.line_),
        PROTOBUF_FIELD_OFFSET(::cybertx::messages::PPMUpdate, _impl_.channel_),
        PROTOBUF_FIELD_OFFSET(::cybertx::messages::PPMUpdate, _impl_.channel_value_),
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::cybertx::messages::PPMUpdateAll, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cybertx::messages::PPMUpdateAll, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cybertx::messages::PPMUpdateAll, _impl_.line_),
        PROTOBUF_FIELD_OFFSET(::cybertx::messages::PPMUpdateAll, _impl_.channel_values_),
        0,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::cybertx::messages::PPMUpdate)},
        {14, 24, -1, sizeof(::cybertx::messages::PPMUpdateAll)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cybertx::messages::_PPMUpdate_default_instance_._instance,
    &::cybertx::messages::_PPMUpdateAll_default_instance_._instance,
};
const char descriptor_table_protodef_message_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\rmessage.proto\022\020cybertx.messages\"O\n\tPPM"
    "Update\022\021\n\004line\030\001 \001(\005H\000\210\001\001\022\017\n\007channel\030\002 \001"
    "(\005\022\025\n\rchannel_value\030\003 \001(\005B\007\n\005_line\"B\n\014PP"
    "MUpdateAll\022\021\n\004line\030\001 \001(\005H\000\210\001\001\022\026\n\016channel"
    "_values\030\002 \003(\005B\007\n\005_lineb\006proto3"
};
static ::absl::once_flag descriptor_table_message_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_message_2eproto = {
    false,
    false,
    190,
    descriptor_table_protodef_message_2eproto,
    "message.proto",
    &descriptor_table_message_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_message_2eproto::offsets,
    file_level_metadata_message_2eproto,
    file_level_enum_descriptors_message_2eproto,
    file_level_service_descriptors_message_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_message_2eproto_getter() {
  return &descriptor_table_message_2eproto;
}
namespace cybertx {
namespace messages {
// ===================================================================

class PPMUpdate::_Internal {
 public:
  using HasBits = decltype(std::declval<PPMUpdate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PPMUpdate, _impl_._has_bits_);
};

PPMUpdate::PPMUpdate(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cybertx.messages.PPMUpdate)
}
PPMUpdate::PPMUpdate(
    ::google::protobuf::Arena* arena, const PPMUpdate& from)
    : PPMUpdate(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PPMUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PPMUpdate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, line_),
           0,
           offsetof(Impl_, channel_value_) -
               offsetof(Impl_, line_) +
               sizeof(Impl_::channel_value_));
}
PPMUpdate::~PPMUpdate() {
  // @@protoc_insertion_point(destructor:cybertx.messages.PPMUpdate)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PPMUpdate::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
PPMUpdate::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(PPMUpdate, _impl_._cached_size_),
              false,
          },
          &PPMUpdate::MergeImpl,
          &PPMUpdate::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void PPMUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:cybertx.messages.PPMUpdate)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.line_ = 0;
  ::memset(&_impl_.channel_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.channel_value_) -
      reinterpret_cast<char*>(&_impl_.channel_)) + sizeof(_impl_.channel_value_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PPMUpdate::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> PPMUpdate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PPMUpdate, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PPMUpdate_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cybertx::messages::PPMUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 line = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PPMUpdate, _impl_.line_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(PPMUpdate, _impl_.line_)}},
    // int32 channel = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PPMUpdate, _impl_.channel_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PPMUpdate, _impl_.channel_)}},
    // int32 channel_value = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PPMUpdate, _impl_.channel_value_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PPMUpdate, _impl_.channel_value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 line = 1;
    {PROTOBUF_FIELD_OFFSET(PPMUpdate, _impl_.line_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 channel = 2;
    {PROTOBUF_FIELD_OFFSET(PPMUpdate, _impl_.channel_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 channel_value = 3;
    {PROTOBUF_FIELD_OFFSET(PPMUpdate, _impl_.channel_value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* PPMUpdate::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cybertx.messages.PPMUpdate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 line = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_line(), target);
  }

  // int32 channel = 2;
  if (this->_internal_channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_channel(), target);
  }

  // int32 channel_value = 3;
  if (this->_internal_channel_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_channel_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cybertx.messages.PPMUpdate)
  return target;
}

::size_t PPMUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cybertx.messages.PPMUpdate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 line = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_line());
  }

  // int32 channel = 2;
  if (this->_internal_channel() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_channel());
  }

  // int32 channel_value = 3;
  if (this->_internal_channel_value() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_channel_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void PPMUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PPMUpdate*>(&to_msg);
  auto& from = static_cast<const PPMUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cybertx.messages.PPMUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.line_ = from._impl_.line_;
  }
  if (from._internal_channel() != 0) {
    _this->_impl_.channel_ = from._impl_.channel_;
  }
  if (from._internal_channel_value() != 0) {
    _this->_impl_.channel_value_ = from._impl_.channel_value_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PPMUpdate::CopyFrom(const PPMUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cybertx.messages.PPMUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PPMUpdate::IsInitialized() const {
  return true;
}

void PPMUpdate::InternalSwap(PPMUpdate* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PPMUpdate, _impl_.channel_value_)
      + sizeof(PPMUpdate::_impl_.channel_value_)
      - PROTOBUF_FIELD_OFFSET(PPMUpdate, _impl_.line_)>(
          reinterpret_cast<char*>(&_impl_.line_),
          reinterpret_cast<char*>(&other->_impl_.line_));
}

::google::protobuf::Metadata PPMUpdate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_message_2eproto_getter,
                                   &descriptor_table_message_2eproto_once,
                                   file_level_metadata_message_2eproto[0]);
}
// ===================================================================

class PPMUpdateAll::_Internal {
 public:
  using HasBits = decltype(std::declval<PPMUpdateAll>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PPMUpdateAll, _impl_._has_bits_);
};

PPMUpdateAll::PPMUpdateAll(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cybertx.messages.PPMUpdateAll)
}
inline PROTOBUF_NDEBUG_INLINE PPMUpdateAll::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        channel_values_{visibility, arena, from.channel_values_},
        _channel_values_cached_byte_size_{0} {}

PPMUpdateAll::PPMUpdateAll(
    ::google::protobuf::Arena* arena,
    const PPMUpdateAll& from)
    : ::google::protobuf::Message(arena) {
  PPMUpdateAll* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.line_ = from._impl_.line_;

  // @@protoc_insertion_point(copy_constructor:cybertx.messages.PPMUpdateAll)
}
inline PROTOBUF_NDEBUG_INLINE PPMUpdateAll::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        channel_values_{visibility, arena},
        _channel_values_cached_byte_size_{0} {}

inline void PPMUpdateAll::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.line_ = {};
}
PPMUpdateAll::~PPMUpdateAll() {
  // @@protoc_insertion_point(destructor:cybertx.messages.PPMUpdateAll)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PPMUpdateAll::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
PPMUpdateAll::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(PPMUpdateAll, _impl_._cached_size_),
              false,
          },
          &PPMUpdateAll::MergeImpl,
          &PPMUpdateAll::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void PPMUpdateAll::Clear() {
// @@protoc_insertion_point(message_clear_start:cybertx.messages.PPMUpdateAll)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.channel_values_.Clear();
  _impl_.line_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PPMUpdateAll::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> PPMUpdateAll::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PPMUpdateAll, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PPMUpdateAll_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cybertx::messages::PPMUpdateAll>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated int32 channel_values = 2;
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PPMUpdateAll, _impl_.channel_values_)}},
    // optional int32 line = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PPMUpdateAll, _impl_.line_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(PPMUpdateAll, _impl_.line_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 line = 1;
    {PROTOBUF_FIELD_OFFSET(PPMUpdateAll, _impl_.line_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated int32 channel_values = 2;
    {PROTOBUF_FIELD_OFFSET(PPMUpdateAll, _impl_.channel_values_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* PPMUpdateAll::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cybertx.messages.PPMUpdateAll)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 line = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_line(), target);
  }

  // repeated int32 channel_values = 2;
  {
    int byte_size = _impl_._channel_values_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_channel_values(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cybertx.messages.PPMUpdateAll)
  return target;
}

::size_t PPMUpdateAll::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cybertx.messages.PPMUpdateAll)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 channel_values = 2;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_channel_values())
    ;
    _impl_._channel_values_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // optional int32 line = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_line());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void PPMUpdateAll::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PPMUpdateAll*>(&to_msg);
  auto& from = static_cast<const PPMUpdateAll&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cybertx.messages.PPMUpdateAll)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_channel_values()->MergeFrom(from._internal_channel_values());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.line_ = from._impl_.line_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PPMUpdateAll::CopyFrom(const PPMUpdateAll& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cybertx.messages.PPMUpdateAll)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PPMUpdateAll::IsInitialized() const {
  return true;
}

void PPMUpdateAll::InternalSwap(PPMUpdateAll* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.channel_values_.InternalSwap(&other->_impl_.channel_values_);
        swap(_impl_.line_, other->_impl_.line_);
}

::google::protobuf::Metadata PPMUpdateAll::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_message_2eproto_getter,
                                   &descriptor_table_message_2eproto_once,
                                   file_level_metadata_message_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace messages
}  // namespace cybertx
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_message_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
